### **Deployment Guidelines for Railway.app**

1. **Plan for Railway Deployment**:  
   - Write code with Railway.app deployment in mind. Familiarize yourself with **Railway Volumes** and **Best Practices** for optimal performance.

2. **Railway Volumes**:  
   - Use volumes for persistent data storage in services.  
   - Key considerations:  
     - Each service supports only one volume.  
     - Volumes cannot be used with replicas.  
     - Avoid data corruption by ensuring no multiple deployments are active simultaneously.  
     - Volumes support resizing (only increasing size) but require downtime during the process.  
     - Non-root UID Docker images may require setting `RAILWAY_RUN_UID=0` to avoid permission issues.  

3. **Best Practices**:  
   - **Use Private Networking**:  
     - Enable private networking for faster, cost-free communication between services within the same project.  
     - Use private variables like `RAILWAY_PRIVATE_DOMAIN` or `DATABASE_URL` for internal service communication.  

   - **Deploy Related Services in the Same Project**:  
     - Group related services (e.g., app and database) in one project to:  
       - Simplify private networking.  
       - Reduce dashboard clutter.  
       - Streamline variable management through referencing.  

   - **Use Reference Variables**:  
     - Dynamically reference variables (e.g., `VITE_BACKEND_HOST=${{Backend.RAILWAY_PUBLIC_DOMAIN}}`) to avoid hard-coding and ensure synchronization across services.  
